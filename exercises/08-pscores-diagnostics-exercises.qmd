---
title: "Propensity Score Diagnostics"
format: html
---


```{r}
#| label: setup
library(tidyverse)
library(broom)
library(touringplans)
library(halfmoon)
library(propensity)
```

We are interested in examining the relationship between whether there were "Extra Magic Hours" in the morning (the **exposure**) and the average wait time for the Seven Dwarfs Mine Train the same day between 9am and 10am (the **outcome**).

Below is the propensity score model and weights you created in the previous exercise.

```{r}
seven_dwarfs <- seven_dwarfs_train_2018 |>
  filter(wait_hour == 9)

propensity_model <- glm(
  park_extra_magic_morning ~ park_ticket_season + park_close + park_temperature_high,
  data = seven_dwarfs,
  family = binomial()
)

seven_dwarfs_ps <- propensity_model |>
  augment(type.predict = "response", data = seven_dwarfs) |>
  mutate(w_ate = wt_ate(.fitted, park_extra_magic_morning))
```

## Your Turn 1

Calculate the standardized mean differences with and without weights

```{r}
smds <- seven_dwarfs_ps |>
  mutate(park_close = as.numeric(park_close)) |>
  tidy_smd(
  .vars = ____,
  .group = ____,
  .wts = ____
)
```

Create the Love Plot using ggplot and halfmoon

```{r}
ggplot(
  data = ____,
  aes(x = abs(____), y = ____, group = ____, color = ____)
) +
  geom_love()
```

Stretch goal: Create a Love Plot using `make_dummy_vars = TRUE` and sorted by `abs(smd)` for the SMD values for the rows represnting the observed data.

## Your Turn 2

Create an unweighted ECDF for `park_temperature_high` by whether or not the day had Extra Magic Hours.

```{r}
ggplot(seven_dwarfs_ps, aes(x = ____, group = ____, color = factor(____))) +
  ____() +
  scale_color_manual(
    "Extra Magic Hours", 
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) + 
  xlab(____) + 
  ylab("Proportion <= x") 
```

Create an weighted ECDF for `park_temperature_high` by whether or not the day had Extra Magic Hours.

```{r}
ggplot(seven_dwarfs_ps, aes(x = ____, color = factor(____))) +
  ____(aes(weights = ____)) + 
  scale_color_manual(
    "Extra Magic Hours",
    values = c("#5154B8", "#5DB854"),
    labels = c("Yes", "No")
  ) +
  xlab("Historic Temperature") +
  ylab("Proportion <= x (Weighted)")
```

## Bonus Your Turn: Weighted Tables

Create a weighted table for the seven dwarfs dataset given your weights

1. Create a survey design object using `svydesign()` that specifies the weights as `w_ate`
2. Use `tbl_svysummary()` by `park_extra_magic_morning` to specify a weighted table
3. Use `add_difference()` to add `"smd"` differences for every variable


```{r}
library(survey)
library(gtsummary)
seven_dwarfs_ps |> 
  select(park_extra_magic_morning, park_ticket_season, park_close, park_temperature_high, w_ate) |> 
______(
  ids = ~ 1,
  data = _,
  weights = ~ ____
) |> 
  ______(
    by = ____,
    include = -w_ate
  ) |>
  add_difference(everything() ~ "____") 
```


